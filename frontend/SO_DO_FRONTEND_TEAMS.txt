================================================================================
                    S∆† ƒê·ªí KI·∫æN TR√öC FRONTEND - H·ªÜ TH·ªêNG QU·∫¢N L√ù NH√ìM
================================================================================

üìã T·ªîNG QUAN H·ªÜ TH·ªêNG
================================================================================
- H·ªá th·ªëng qu·∫£n l√Ω nh√≥m n√¢ng cao v·ªõi giao di·ªán hi·ªán ƒë·∫°i
- H·ªó tr·ª£ dark mode v√† responsive design
- T√≠ch h·ª£p v·ªõi backend Enhanced Teams API
- S·ª≠ d·ª•ng React + TypeScript + Tailwind CSS

üìÅ C·∫§U TR√öC TH√ÄNH PH·∫¶N (COMPONENTS)
================================================================================

/src/components/After/tab/teams/
‚îú‚îÄ‚îÄ teams.tsx                    (Trang ch√≠nh - Component g·ªëc)
‚îú‚îÄ‚îÄ TeamsManagement.tsx          (Component qu·∫£n l√Ω ch√≠nh) ‚úÖ
‚îú‚îÄ‚îÄ TeamCard.tsx                 (Th·∫ª hi·ªÉn th·ªã th√¥ng tin nh√≥m) ‚úÖ
‚îú‚îÄ‚îÄ TeamStats.tsx                (Th·ªëng k√™ t·ªïng quan) ‚úÖ
‚îú‚îÄ‚îÄ CreateTeamModal.tsx          (Modal t·∫°o nh√≥m m·ªõi) ‚úÖ
‚îú‚îÄ‚îÄ TeamDetailsModal.tsx         (Modal chi ti·∫øt nh√≥m) ‚úÖ
‚îú‚îÄ‚îÄ BulkOperationsModal.tsx      (Modal thao t√°c h√†ng lo·∫°t) ‚úÖ
‚îú‚îÄ‚îÄ TeamSearchFilters.tsx        (B·ªô l·ªçc t√¨m ki·∫øm n√¢ng cao) ‚úÖ
‚îú‚îÄ‚îÄ TeamActivityFeed.tsx         (Timeline ho·∫°t ƒë·ªông) ‚úÖ M·ªöI
‚îú‚îÄ‚îÄ TeamHealthCheck.tsx          (Ki·ªÉm tra s·ª©c kh·ªèe nh√≥m) ‚úÖ M·ªöI
‚îú‚îÄ‚îÄ TeamRecommendations.tsx      (G·ª£i √Ω AI th√¥ng minh) ‚úÖ M·ªöI
‚îú‚îÄ‚îÄ NotificationCenter.tsx       (Trung t√¢m th√¥ng b√°o) ‚úÖ M·ªöI
‚îú‚îÄ‚îÄ TeamSettings.tsx             (C√†i ƒë·∫∑t nh√≥m)
‚îî‚îÄ‚îÄ types/
    ‚îú‚îÄ‚îÄ team.types.ts           (ƒê·ªãnh nghƒ©a ki·ªÉu d·ªØ li·ªáu)
    ‚îî‚îÄ‚îÄ api.types.ts            (Ki·ªÉu d·ªØ li·ªáu API)

üéØ CH·ª®C NƒÇNG CH·ª¶ Y·∫æU
================================================================================

1. QU·∫¢N L√ù NH√ìM C∆† B·∫¢N
   ‚úÖ Hi·ªÉn th·ªã danh s√°ch nh√≥m d·∫°ng l∆∞·ªõi/b·∫£ng
   ‚úÖ T·∫°o nh√≥m m·ªõi v·ªõi validation ƒë·∫ßy ƒë·ªß
   ‚úÖ Xem/ch·ªânh s·ª≠a th√¥ng tin nh√≥m
   ‚úÖ X√≥a nh√≥m (c√≥ x√°c nh·∫≠n)
   ‚úÖ Qu·∫£n l√Ω th√†nh vi√™n nh√≥m

2. T√åM KI·∫æM V√Ä L·ªåC N√ÇNG CAO
   ‚úÖ T√¨m ki·∫øm theo t√™n, m√¥ t·∫£
   ‚úÖ L·ªçc theo lo·∫°i nh√≥m, quy·ªÅn ri√™ng t∆∞
   ‚úÖ L·ªçc theo s·ªë l∆∞·ª£ng th√†nh vi√™n
   ‚úÖ L·ªçc theo m·ª©c ƒë·ªô ho·∫°t ƒë·ªông
   ‚úÖ L·ªçc theo kho·∫£ng th·ªùi gian
   ‚úÖ L·ªçc theo tags v√† tr∆∞·ªüng nh√≥m
   ‚úÖ S·∫Øp x·∫øp ƒëa ti√™u ch√≠

3. TH·ªêNG K√ä V√Ä PH√ÇN T√çCH
   ‚úÖ Th·ªëng k√™ t·ªïng quan (s·ªë nh√≥m, th√†nh vi√™n, d·ª± √°n)
   ‚úÖ Th·ªëng k√™ chi ti·∫øt t·ª´ng nh√≥m
   ‚úÖ So s√°nh hi·ªáu su·∫•t gi·ªØa c√°c nh√≥m
   ‚úÖ Bi·ªÉu ƒë·ªì ho·∫°t ƒë·ªông theo th·ªùi gian
   ‚úÖ Th·ªëng k√™ xu h∆∞·ªõng v√† tƒÉng tr∆∞·ªüng

4. THAO T√ÅC H√ÄNG LO·∫†T
   ‚úÖ Ch·ªçn nhi·ªÅu nh√≥m c√πng l√∫c
   ‚úÖ X√≥a/l∆∞u tr·ªØ nhi·ªÅu nh√≥m
   ‚úÖ Th√™m/x√≥a th√†nh vi√™n h√†ng lo·∫°t
   ‚úÖ Thay ƒë·ªïi quy·ªÅn ri√™ng t∆∞ h√†ng lo·∫°t
   ‚úÖ Th√™m/x√≥a tags h√†ng lo·∫°t
   ‚úÖ Xu·∫•t d·ªØ li·ªáu (CSV, JSON, Excel)

5. KI·ªÇM TRA S·ª®C KH·ªéE NH√ìM
   ‚úÖ ƒê√°nh gi√° ch·ªâ s·ªë s·ª©c kh·ªèe nh√≥m
   ‚úÖ G·ª£i √Ω c·∫£i thi·ªán
   ‚úÖ C·∫£nh b√°o nh√≥m kh√¥ng ho·∫°t ƒë·ªông
   ‚úÖ Ki·ªÉm tra c·∫•u tr√∫c nh√≥m

6. G·ª¢I √ù V√Ä KHUY·∫æN NGH·ªä
   ‚úÖ G·ª£i √Ω nh√≥m ph√π h·ª£p ƒë·ªÉ tham gia
   ‚úÖ Khuy·∫øn ngh·ªã d·ª±a tr√™n s·ªü th√≠ch
   ‚úÖ G·ª£i √Ω th√†nh vi√™n m·ªõi
   ‚úÖ ƒê·ªÅ xu·∫•t d·ª± √°n ph√π h·ª£p
   ‚úÖ AI recommendation system v·ªõi confidence score
   ‚úÖ Feedback mechanism cho recommendations

7. TRUNG T√ÇM TH√îNG B√ÅO
   ‚úÖ Qu·∫£n l√Ω t·∫•t c·∫£ th√¥ng b√°o li√™n quan ƒë·∫øn nh√≥m
   ‚úÖ ƒê√°nh d·∫•u quan tr·ªçng, l∆∞u tr·ªØ th√¥ng b√°o
   ‚úÖ Thao t√°c h√†ng lo·∫°t v·ªõi th√¥ng b√°o
   ‚úÖ C·∫≠p nh·∫≠t real-time
   ‚úÖ Action buttons cho quick actions

8. TIMELINE HO·∫†T ƒê·ªòNG
   ‚úÖ Theo d√µi m·ªçi ho·∫°t ƒë·ªông c·ªßa nh√≥m
   ‚úÖ L·ªçc theo lo·∫°i ho·∫°t ƒë·ªông v√† th·ªùi gian
   ‚úÖ Real-time updates
   ‚úÖ Giao di·ªán timeline tr·ª±c quan
   ‚úÖ Export activity data

üìä C·∫§U TR√öC D·ªÆ LI·ªÜU CH√çNH
================================================================================

interface Team {
  id: string;
  name: string;
  description: string;
  color: string;
  isPublic: boolean;
  maxMembers?: number;
  memberCount: number;
  projectCount: number;
  type: 'academic' | 'project' | 'study' | 'research' | 'other';
  tags: string[];
  createdAt: string;
  lastActivity: string;
  leader: {
    id: string;
    name: string;
    avatar?: string;
  };
  healthScore: number;
  activityLevel: 'very-active' | 'active' | 'moderate' | 'inactive';
}

interface TeamMember {
  id: string;
  userId: string;
  name: string;
  email: string;
  avatar?: string;
  role: 'leader' | 'admin' | 'member';
  joinedAt: string;
  lastActive: string;
}

interface TeamStats {
  overview: {
    totalTeams: number;
    teamsAsLeader: number;
    teamsAsAdmin: number;
    teamsAsMember: number;
    publicTeams: number;
    privateTeams: number;
  };
  projects: {
    totalProjects: number;
    completedProjects: number;
    activeProjects: number;
    pendingProjects: number;
  };
  members: {
    totalMembers: number;
    averageTeamSize: number;
  };
  activity: {
    recentlyActiveTeams: number;
  };
}

üé® THI·∫æT K·∫æ GIAO DI·ªÜN
================================================================================

1. LAYOUT CH√çNH
   - Header: Ti√™u ƒë·ªÅ, n√∫t t·∫°o nh√≥m, b·ªô l·ªçc nhanh
   - Sidebar: B·ªô l·ªçc n√¢ng cao, th·ªëng k√™
   - Main Content: L∆∞·ªõi nh√≥m ho·∫∑c b·∫£ng danh s√°ch
   - Footer: Ph√¢n trang, th√¥ng tin t·ªïng quan

2. TH·∫∫ NH√ìM (TeamCard)
   - Avatar/m√†u s·∫Øc nh√≥m
   - T√™n v√† m√¥ t·∫£ ng·∫Øn
   - S·ªë th√†nh vi√™n v√† d·ª± √°n
   - Ch·ªâ s·ªë s·ª©c kh·ªèe
   - Tags v√† lo·∫°i nh√≥m
   - N√∫t h√†nh ƒë·ªông nhanh

3. MODAL CHI TI·∫æT NH√ìM
   - Tab Th√¥ng tin c∆° b·∫£n
   - Tab Th√†nh vi√™n
   - Tab D·ª± √°n
   - Tab Ho·∫°t ƒë·ªông
   - Tab C√†i ƒë·∫∑t

4. B·ªò L·ªåC T√åM KI·∫æM
   - Thanh t√¨m ki·∫øm ch√≠nh
   - Dropdown lo·∫°i nh√≥m
   - Slider s·ªë l∆∞·ª£ng th√†nh vi√™n
   - Date picker kho·∫£ng th·ªùi gian
   - Multi-select tags
   - Toggle quy·ªÅn ri√™ng t∆∞

üì± RESPONSIVE DESIGN
================================================================================

DESKTOP (‚â•1024px)
- L∆∞·ªõi 4 c·ªôt
- Sidebar ƒë·∫ßy ƒë·ªß
- Modal l·ªõn
- Tooltip chi ti·∫øt

TABLET (768px - 1023px)
- L∆∞·ªõi 3 c·ªôt
- Sidebar c√≥ th·ªÉ thu g·ªçn
- Modal trung b√¨nh
- Touch-friendly

MOBILE (‚â§767px)
- L∆∞·ªõi 1-2 c·ªôt
- Bottom sheet thay modal
- Swipe gestures
- Tab navigation

üîÑ T∆Ø∆†NG T√ÅC NG∆Ø·ªúI D√ôNG
================================================================================

1. T·∫†O NH√ìM M·ªöI
   N√∫t "T·∫°o nh√≥m" ‚Üí Modal ‚Üí Form validation ‚Üí API call ‚Üí Refresh danh s√°ch

2. CH·ªàNH S·ª¨A NH√ìM
   Click th·∫ª nh√≥m ‚Üí Modal chi ti·∫øt ‚Üí Tab ch·ªânh s·ª≠a ‚Üí Save ‚Üí Update UI

3. T√åM KI·∫æM V√Ä L·ªåC
   Nh·∫≠p t·ª´ kh√≥a ‚Üí Debounce 300ms ‚Üí API call ‚Üí Update k·∫øt qu·∫£

4. THAO T√ÅC H√ÄNG LO·∫†T
   Checkbox select ‚Üí Menu h√†nh ƒë·ªông ‚Üí Modal x√°c nh·∫≠n ‚Üí Th·ª±c hi·ªán

5. XEM TH·ªêNG K√ä
   Tab th·ªëng k√™ ‚Üí Loading ‚Üí Render charts ‚Üí Interactive tooltips

üöÄ T·ªêI ∆ØU HI·ªÜU SU·∫§T
================================================================================

1. LAZY LOADING
   - Component modal ch·ªâ load khi c·∫ßn
   - Infinite scroll cho danh s√°ch l·ªõn
   - Image lazy loading cho avatar

2. CACHING
   - Cache API response v·ªõi React Query
   - Local storage cho preferences
   - Session storage cho filters

3. DEBOUNCING
   - Search input: 300ms
   - Filter changes: 500ms
   - Auto-save: 1000ms

4. VIRTUAL SCROLLING
   - Cho danh s√°ch >100 items
   - Ch·ªâ render visible items
   - Smooth scrolling

üîê B·∫¢O M·∫¨T V√Ä QUY·ªÄN H·∫†N
================================================================================

1. AUTHENTICATION
   - JWT token trong header
   - Auto refresh token
   - Logout khi expired

2. AUTHORIZATION
   - Role-based actions
   - Hide/disable buttons theo quy·ªÅn
   - Validate ·ªü c·∫£ client v√† server

3. DATA VALIDATION
   - Client-side validation
   - Sanitize input data
   - XSS protection

üß™ TESTING STRATEGY
================================================================================

1. UNIT TESTS
   - Component rendering
   - Hook functionality
   - Utility functions

2. INTEGRATION TESTS
   - API interactions
   - Form submissions
   - Navigation flows

3. E2E TESTS
   - Complete user journeys
   - Cross-browser testing
   - Performance testing

üìà ANALYTICS V√Ä MONITORING
================================================================================

1. USER BEHAVIOR
   - Click tracking
   - Time on page
   - Feature usage

2. PERFORMANCE
   - Load times
   - API response times
   - Error rates

3. BUSINESS METRICS
   - Team creation rate
   - Member engagement
   - Feature adoption

üîß C√îNG C·ª§ V√Ä TH∆Ø VI·ªÜN
================================================================================

CORE
- React 18+
- TypeScript
- Tailwind CSS
- React Router

STATE MANAGEMENT
- React Query (API state)
- Zustand (Local state)
- Context API (Theme, Auth)

UI COMPONENTS
- Heroicons
- Headless UI
- React Hook Form
- React Select

CHARTS & VISUALIZATION
- Recharts
- Chart.js
- D3.js (n·∫øu c·∫ßn)

UTILITIES
- Date-fns
- Lodash
- Clsx
- React Hot Toast

================================================================================
                               K·∫æT TH√öC S∆† ƒê·ªí
================================================================================
