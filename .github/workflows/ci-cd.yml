name: UniPlan CI/CD Pipeline

on:
  workflow_dispatch:
  push:
    branches: [ master, develop ]
    paths-ignore:
      - '**/*.md'
      - 'docs/**'
  pull_request:
    branches: [ master ]

concurrency:
  group: uniplan-${{ github.ref }}
  cancel-in-progress: true

env:
  NODE_VERSION: '18'

jobs:
  frontend-test:
    name: Frontend (Install • Test • Build)
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: npm
          cache-dependency-path: frontend/package-lock.json

      - name: Install deps
        working-directory: frontend
        run: npm ci

      - name: Lint
        working-directory: frontend
        run: |
          if [ -f package.json ]; then npm run lint || npm run lint:fix || true; fi

      - name: Test
        working-directory: frontend
        run: |
          if [ -f package.json ]; then npm test -- --watchAll=false || echo "(no jest configured)"; fi

      - name: Build
        working-directory: frontend
        run: |
          if [ -f package.json ]; then npm run build; fi

      - name: Upload build artifact
        if: success()
        uses: actions/upload-artifact@v4
        with:
          name: frontend-build
          path: frontend/build
          if-no-files-found: warn

  backend-test:
    name: Backend (Install • Test • Lint)
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: npm
          cache-dependency-path: backend/package-lock.json

      - name: Install deps
        working-directory: backend
        run: npm ci || echo "No backend package-lock.json"

      - name: Lint
        working-directory: backend
        run: |
          if [ -f package.json ]; then npm run lint || npm run lint:fix || true; fi

      - name: Test
        working-directory: backend
        run: |
          if [ -f package.json ]; then npm test || echo "(no backend tests yet)"; fi

  code-quality:
    name: Aggregate Code Quality
    runs-on: ubuntu-latest
    needs: [frontend-test, backend-test]
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Quick Syntax Probe (demo)
        run: |
          echo "Checking demo syntax files (non-blocking)"
          if [ -f Document/error-demo.js ]; then node -c Document/error-demo.js || echo "❌ Syntax errors in demo file"; fi

  deploy:
    name: Deploy (placeholder)
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/master' && github.event_name == 'push'
    needs: [frontend-test, backend-test, code-quality]
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Download frontend artifact
        uses: actions/download-artifact@v4
        with:
          name: frontend-build
          path: dist

      - name: Show build contents
        run: |
          echo "Listing frontend build artifact contents:" 
          ls -R dist || true

      - name: Deploy notification
        run: |
          echo "(Placeholder) Deploying UniPlan to production..."
          echo "Add your deployment commands here (e.g., rsync, scp, firebase deploy, docker push, etc.)"
