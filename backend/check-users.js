// T·∫°o file ki·ªÉm tra: backend/scripts/check-users.js
const mongoose = require('mongoose');
const User = require('../models/user.model');
const userModel = require('../models/user.model'); // ƒê·∫£m b·∫£o ƒë∆∞·ªùng d·∫´n ƒë√∫ng
require('dotenv').config();

async function checkUsers() {
    try {
        await mongoose.connect(process.env.MONGODB_URI);
        console.log('‚úÖ K·∫øt n·ªëi MongoDB th√†nh c√¥ng');
        
        // ƒê·∫øm t·ªïng s·ªë user
        const totalUsers = await User.countDocuments();
        console.log(`üìä T·ªïng s·ªë user: ${totalUsers}`);
        
        // Ki·ªÉm tra c√°c lo·∫°i g√≥i
        const freeTrial = await User.countDocuments({ current_plan_type: 'free_trial' });
        const monthly = await User.countDocuments({ current_plan_type: 'monthly' });
        const yearly = await User.countDocuments({ current_plan_type: 'yearly' });
        const expired = await User.countDocuments({ current_plan_type: 'expired' });
        const nullPlan = await User.countDocuments({ current_plan_type: null });
        const undefinedPlan = await User.countDocuments({ current_plan_type: { $exists: false } });
        
        console.log('\nüìà Ph√¢n b·ªë g√≥i hi·ªán t·∫°i:');
        console.log(`- Free Trial: ${freeTrial}`);
        console.log(`- Monthly: ${monthly}`);
        console.log(`- Yearly: ${yearly}`);
        console.log(`- Expired: ${expired}`);
        console.log(`- Null: ${nullPlan}`);
        console.log(`- Undefined: ${undefinedPlan}`);
        
        // Hi·ªÉn th·ªã 3 user ƒë·∫ßu ti√™n ƒë·ªÉ ki·ªÉm tra
        const sampleUsers = await User.find({}).limit(3).select('email current_plan_type trial_start_date createdAt');
        console.log('\nüë• Sample users:');
        sampleUsers.forEach(user => {
            console.log(`- ${user.email}: ${user.current_plan_type} (created: ${user.createdAt})`);
        });
        
        await mongoose.connection.close();
        console.log('\n‚úÖ Ki·ªÉm tra ho√†n t·∫•t!');
        
    } catch (error) {
        console.error('‚ùå L·ªói:', error);
        process.exit(1);
    }
}

checkUsers();