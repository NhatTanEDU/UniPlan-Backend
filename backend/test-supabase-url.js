// test-supabase-url.js
// Script ƒë·ªÉ test tr·ª±c ti·∫øp URL Supabase
require('dotenv').config();

console.log('üß™ Testing Supabase URL Connection...');
console.log('URL hi·ªán t·∫°i:', process.env.SUPABASE_URL);

// Test b·∫±ng fetch th√¥ng th∆∞·ªùng
async function testURL() {
    try {
        const response = await fetch(process.env.SUPABASE_URL + '/rest/v1/', {
            headers: {
                'apikey': process.env.SUPABASE_SERVICE_KEY,
                'Authorization': `Bearer ${process.env.SUPABASE_SERVICE_KEY}`
            }
        });
        
        console.log('‚úÖ URL c√≥ th·ªÉ truy c·∫≠p ƒë∆∞·ª£c!');
        console.log('Status:', response.status);
        
    } catch (error) {
        console.log('‚ùå L·ªói khi test URL:', error.message);
        
        // G·ª£i √Ω c√°c URL th∆∞·ªùng g·∫∑p
        console.log('\nüîç H√£y ki·ªÉm tra l·∫°i URL trong Supabase Dashboard:');
        console.log('   - V√†o Settings > API');
        console.log('   - Copy ch√≠nh x√°c "Project URL"');
        console.log('   - ƒê·∫£m b·∫£o kh√¥ng c√≥ k√Ω t·ª± th·ª´a ho·∫∑c thi·∫øu');
        
        // Test m·ªôt v√†i variation ph·ªï bi·∫øn
        const possibleUrls = [
            'https://bwdfmrjcxqwthjplopc.supabase.co',
            'https://bwdffmrjcxqwthjplopc.supabase.co', // v·ªõi 2 ch·ªØ f
            'https://bwdfmrjcxqwthjplopc.supabase.io', // v·ªõi .io
        ];
        
        console.log('\nüß™ Testing c√°c variation ph·ªï bi·∫øn...');
        for (const url of possibleUrls) {
            try {
                const testResponse = await fetch(url + '/rest/v1/', {
                    headers: {
                        'apikey': process.env.SUPABASE_SERVICE_KEY,
                    }
                });
                console.log(`‚úÖ ${url} - Status: ${testResponse.status}`);
            } catch (err) {
                console.log(`‚ùå ${url} - Error: ${err.message.split('\n')[0]}`);
            }
        }
    }
}

testURL();
